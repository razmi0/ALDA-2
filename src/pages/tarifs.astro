---
import Heading from "@/components/Hero/Heading.astro";
import rawProducts from "@/components/Products/product.json" assert { type: "json" };
import type { ProductType } from "@/components/Products/types";
import Dialog from "@/components/Tarif/Dialog/Dialog.astro";
import Orientation from "@/components/Tarif/Orientation.astro";
import Pictures from "@/components/Tarif/Pictures.astro";
import Stats from "@/components/Tarif/Stats.astro";
import TarifText from "@/components/Tarif/TarifText.astro";
import HeaderFooter from "@/layouts/HeaderFooter.astro";
import Section from "@/layouts/Section.astro";
import { ArrowDown, Backpack, Gauge, MapPin } from "lucide-react";
import Layout from "../layouts/Layout.astro";

const products = rawProducts.products as ProductType[];
---

<style>
  .debug-1 {
    @apply ring-1 ring-red-400;
  }
  .debug-2 {
    @apply ring-1 ring-green-400;
  }
  .debug-3 {
    @apply ring-1 ring-blue-400;
  }
  .debug-4 {
    @apply ring-1 ring-yellow-400;
  }
  .debug-5 {
    @apply ring-1 ring-purple-400;
  }
  .debug-6 {
    @apply ring-1 ring-pink-400;
  }
</style>

<Layout title="tarif">
  <HeaderFooter slot="header" />
  <Section>
    <Heading h2="Nos tarifs" h3="Composable et personalisable" className="text-black">
      <div class="grow max-h-[10%]"></div>
      <a href="#1" class="pointer-events-auto">
        <ArrowDown size="32" />
      </a>
    </Heading>
  </Section>
  <Section id={"1"} className={"vertical center container gap-32"}>
    {
      products.map((product, i) => {
        const orientation = i % 2 === 0 ? "ltr" : "rtl";
        return (
          <Orientation orientation={orientation}>
            <section class="relative vertical w-fit h-full">
              <Pictures size={400} orientation={orientation} />
            </section>
            <section class="vertical w-fit h-full gap-5 items-start justify-evenly">
              <TarifText title={product.title} description={product.description.long} />
              <article class="vertical gap-3">
                <Stats label="dificulty" type="bar" stats={product.stats}>
                  <Gauge slot="icon" />
                </Stats>
                <Stats label="matÃ©riels" type="badge" stats={product.materials}>
                  <Backpack slot="icon" />
                </Stats>
                <Stats label="lieux" type="badge" stats={product.locations}>
                  <MapPin slot="icon" />
                </Stats>
              </article>
              <Dialog product={product} dialogSize={1000} />
            </section>
          </Orientation>
        );
      })
    }
  </Section>

  <HeaderFooter slot="footer" as="footer" />
</Layout>
