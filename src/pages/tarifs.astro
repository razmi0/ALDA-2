---
import Heading from "@/components/Hero/Heading.astro";
import Badge from "@/components/Products/Badge.astro";
import Bar from "@/components/Products/Bar.astro";
import rawProducts from "@/components/Products/product.json" assert { type: "json" };
import type { ProductType } from "@/components/Products/types";
import RandomImage from "@/components/RandomImage.astro";
import HeaderFooter from "@/layouts/HeaderFooter.astro";
import Section from "@/layouts/Section.astro";
import { generateLorem } from "@/lib/utils";
import { ArrowDown, Backpack, Gauge, MapPin } from "lucide-react";
import Layout from "../layouts/Layout.astro";
import Dialog from "@/components/Tarif/Dialog.astro";

const products = rawProducts.products as ProductType[];
---

<style>
  .debug-1 {
    @apply ring-1 ring-red-400;
  }
  .debug-2 {
    @apply ring-1 ring-green-400;
  }
  .debug-3 {
    @apply ring-1 ring-blue-400;
  }
  .debug-4 {
    @apply ring-1 ring-yellow-400;
  }
  .debug-5 {
    @apply ring-1 ring-purple-400;
  }
  .debug-6 {
    @apply ring-1 ring-pink-400;
  }
</style>

<script>
  const navButtons = Array.from(document.querySelectorAll("button[data-action*='select#']")) as HTMLButtonElement[];
  const frameElements = Array.from(document.querySelectorAll("[data-action*='frame-element#']")) as HTMLDivElement[];

  const indexedFrames = new Map<string, HTMLElement>();
  frameElements.map((frameElement) => {
    const action = frameElement.dataset.action as string;
    const id = action.split("#")[1] as string;
    indexedFrames.set(id, frameElement);
  });

  navButtons.map((btn) => {
    btn.addEventListener("click", () => {
      const action = btn.dataset.action as string;
      const id = action.split("#")[1];
      if (!id || !indexedFrames.has(id)) throw new Error("Invalid id");
      const frameElement = indexedFrames.get(id);
      if (!frameElement) throw new Error("Invalid frame element");
      frameElement.scrollIntoView({ behavior: "smooth" });
    });
  });
</script>

<Layout title="tarif">
  <HeaderFooter slot="header" />
  <Section>
    <Heading h2="Nos tarifs" h3="Composable et personalisable" className="text-black">
      <!-- <p class="max-w-[60ch]">{generateLorem(30)}</p> -->

      <div class="grow max-h-[10%]"></div>

      <a href="#1" class="pointer-events-auto">
        <ArrowDown size="32" />
      </a>
    </Heading>
  </Section>
  <Section id={"1"} className={"horizontal items-start justify-center container"} fixedHeight>
    <!-- SECTION card -->
    <!-- SECTION card -->
    <!-- SECTION card -->
    <!-- SECTION card -->
    <div class="vertical w-fit h-fit gap-6 py-5 center">
      {
        products.map((product) => {
          return (
            <button
              class="w-full vertical items-center justify-between shadcn-border hover:bg-slate-100 py-2 px-4 gap-3 focus:ring-1 focus-visible:ring-1 ring-offset-2 ring-black "
              data-action={`select#${product.id}`}>
              <div class="w-full horizontal items-center justify-between">
                <h2>{product.name}</h2>
                <p class="font-medium">
                  <span class="font-bold text-lg">
                    <small> €</small>
                    {product.price}
                  </span>
                  / {product.unit}
                </p>
              </div>
              <div class="w-full h-full space-x-4 text-left">
                {product.tags.map((tag) => {
                  return <Badge tag={tag} className="my-2" />;
                })}
              </div>
            </button>
          );
        })
      }
    </div>
    <!-- SECTION content -->
    <!-- SECTION content -->
    <!-- SECTION content -->
    <!-- SECTION content -->
    <div class="overflow-hidden h-[500px] [&>[data-action*='frame-element']]:h-[500px]" data-is="frame">
      {
        products.map((product) => {
          return (
            <div
              class="w-full h-full horizontal px-5 gap-10 overflow-auto items-start justify-center"
              data-action={`frame-element#${product.id}`}>
              <section class="relative h-[500px] w-4/12">
                <RandomImage seed={600} className=" full aspect-auto" />
                <div class="absolute top-0 vertical justify-start gap-4 mt-4  left-4 h-full">
                  <RandomImage size={110} className="ring-1 ring-white" />
                  <RandomImage size={110} className="ring-1 ring-white" />
                  <RandomImage size={110} className="ring-1 ring-white" />
                </div>
              </section>
              <article class="vertical h-fit gap-5 items-start justify-center max-w-[70%] ">
                <h2> {product.title}</h2>
                <div class="overflow-auto leading-5">
                  <p class="max-w-[60ch]">{product.description.long}</p>
                </div>
                {/* LIST */}
                <section class="vertical gap-3">
                  <article class="horizontal items-center justify-start w-fit gap-5">
                    <div class="horizontal center gap-1">
                      <Gauge className="h-5 -translate-y-[2px] stroke-2" />
                      <p class="font-semibold">difficulté</p>
                    </div>
                    {product.stats.map((stat) => (
                      <Bar barSize={175} value={stat.value} />
                    ))}
                  </article>
                  <article class="horizontal items-center justify-start w-fit gap-5">
                    <div class="horizontal center gap-1">
                      <Backpack className="h-5 -translate-y-[2px] stroke-2" />
                      <p class="font-semibold">matériels</p>
                    </div>
                    <div class="space-x-5">
                      {[...Array(5)].map(() => (
                        <Badge variant="outline" className="my-2 font-medium" tag={generateLorem(1)} />
                      ))}
                    </div>
                  </article>
                  <article class="horizontal items-center justify-start w-fit gap-5">
                    <div class="horizontal center gap-1">
                      <MapPin className="h-5 stroke-2" />
                      <p class="font-semibold">lieux</p>
                    </div>
                    <div class="space-x-5">
                      {[...Array(5)].map(() => (
                        <Badge variant="outline" className="my-2 font-medium" tag={generateLorem(1)} />
                      ))}
                    </div>
                  </article>
                </section>
                {/* LIST */}
                {/* <Inputs product={product} /> */}

                <Dialog product={product} />

                {/* <Inputs product={product} /> */}
              </article>
            </div>
          );
        })
      }
    </div>
  </Section>
</Layout>
