---
import Article from "@/components/shared/Article.astro";
import Badge from "@/components/shared/Badge.astro";
import Button from "@/components/shared/Button.astro";
import CTA from "@/components/shared/CTA.astro";
import RandomImage from "@/components/shared/RandomImage.astro";
import { capitalize } from "@/lib/utils";
import { Image } from "astro:assets";
import type { Product, ProductImage } from "./types";

interface Props {
    orientation: "ltr" | "rtl";
    product: Product;
    image: ProductImage | undefined;
    buttonText: string;
}

const { orientation, product, image } = Astro.props;
const { id, pole, description, tags, price, locations, program, audience } = product;
---

<div class="w-full">
    <h2 class="text-4xl text-center">PÃ´le {capitalize(pole)}</h2>
</div>
<article class={orientation === "rtl" ? "vertical lg:horizontal-reverse" : "vertical lg:horizontal"}>
    <div transition:name={`random-image-${id}`}>
        {
            image ? (
                <Image
                    src={image.src}
                    alt={image.alt}
                    width={image.size[0] ?? 500}
                    height={image.size[1] ?? 500}
                    class={`aspect-square object-cover rounded-md`}
                />
            ) : (
                <RandomImage width={500} height={500} />
            )
        }
    </div>
    <div class="vertical gap-10 w-fit" data-id={id}>
        <Article
            words1={description && capitalize(description)}
            pClass={"text-black/90 dark:text-white/90 max-w-[50ch]"}
            dark>
            {
                tags && (
                    <div class="w-full h-full space-x-4 text-left" slot="subtitle">
                        {tags.map((tag) => (
                            <Badge tag={tag} />
                        ))}
                    </div>
                )
            }
        </Article>
        <ul class={`max-w-[50ch]`}>
            {
                price && (
                    <li>
                        <strong class={`quattrocento-sans-bold`}>Prix</strong> :{" "}
                        {typeof price === "string" ? capitalize(price) : price}
                    </li>
                )
            }
            {
                locations && (
                    <li>
                        <strong class={`quattrocento-sans-bold`}>Lieux</strong> :{" "}
                        {Array.isArray(locations) ? locations.map(capitalize).join(", ") : capitalize(locations)}
                    </li>
                )
            }
            {
                program && (
                    <li>
                        <strong class={`quattrocento-sans-bold`}>Programme</strong> :{" "}
                        {Array.isArray(program) ? program.map(capitalize).join(", ") : capitalize(program)}
                    </li>
                )
            }
            {
                audience && (
                    <li>
                        <strong class={`quattrocento-sans-bold`}>Publique</strong> : {capitalize(audience)}
                    </li>
                )
            }
        </ul>
        <footer class="horizontal items-center justify-start gap-10">
            <CTA href={`/activites#${id}`} prefetch prefetchType="viewport">
                <Button ring="sm" size="lg" variant="outline" dark className="w-fit font-bold whitespace-nowrap">
                    En savoir plus
                </Button>
            </CTA>
        </footer>
    </div>
</article>
