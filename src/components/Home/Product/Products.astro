---
import SensorielImage from "@/assets/client-img-26.jpg";
import EvenementielImage from "@/assets/client-img-44.jpg";
import RechercheImage from "@/assets/client-img-53.jpg";
import data from "@/components/shared/product-data/main-product.json" assert { type: "json" };
import Simple from "./Simple.astro";
import TopSection from "./TopSection.astro";
import type { ComplexProduct, Product, ProductData, ProductImage } from "./types";

/**
 * @description Filter available products
 * - simpleProducts: products that doesn't contain data
 * - complexProducts: extends the simpleProducts with data
 */
const buildProducts = (data: ProductData): { simpleProducts: Product[]; complexProducts: ComplexProduct[] } => {
  const { poles, products } = data;
  const availableProducts = products.filter((p) => poles.available.includes(p.id));
  const simpleProducts = availableProducts.filter((p) => poles.simple.includes(p.id));
  const complexProducts = availableProducts.filter((p) => poles.complex.includes(p.id)) as ComplexProduct[];
  return { simpleProducts, complexProducts };
};

const { simpleProducts, complexProducts } = buildProducts(data);

const images: ProductImage[] = [
  {
    label: "evenementiel",
    src: EvenementielImage,
    alt: "Illustration d'un évenement Alabordarbre avec des personnes souriantes en cercle écoutant les instructions de l'animatrice Lou équipée sur corde",
    size: [500, 500],
  },
  {
    label: "sensoriel et sensibilisation",
    src: SensorielImage,
    alt: "Illustration d'un atelier sensoriel Alabordarbre où l'on aperçoit deux personnes grimpant dans le vide sur une corde",
    size: [500, 500],
  },
  {
    label: "recherche",
    src: RechercheImage,
    alt: "Illustration d'un atelier de recherche Alabordarbre pendant lequel un groupe de personne est en train de chercher des indices au pied d'un arbre",
    size: [500, 500],
  },
];
---

<TopSection title="Nos trois pôles d'activités" verticalText="Le meilleur de nos propositions">
  {
    simpleProducts.map((p, i) => {
      const orientation = i % 2 === 0 ? "ltr" : "rtl";
      const image = images.find((img) => img.label === p.title);
      return <Simple orientation={orientation} product={p} image={image} buttonText="En savoir plus" />;
    })
  }
</TopSection>
<!-- {
    simpleProducts.map((product: Product, i: number) => {
      const { id, title, description, tags, price, locations, program, audience } = product;
      const articleOrientation = i % 2 !== 0 ? "vertical lg:horizontal-reverse" : "vertical lg:horizontal";
      return (
        <article class={articleOrientation} data-is={`product-${i}`}>
          <div transition:name={`random-image-${id}`}>
            {title in imagesData ? (
              //@ts-ignore
              <Image
                src={imagesData[title].src}
                alt={imagesData[title].alt}
                width={imagesData[title].size[0]}
                height={imagesData[title].size[1]}
                class={`aspect-square object-cover rounded-md`}
              />
            ) : (
              <RandomImage width={500}} height={500} />
            )}
          </div>
          <div class="vertical gap-10 w-fit" data-id={id}>
            <Article title={capitalize(title)} words1={description && capitalize(description)} pClass={"text-black/90 dark:text-white/90 max-w-[50ch]"} dark>
              {tags && (
                <div class="w-full h-full space-x-4 text-left" slot="subtitle">
                  {tags.map((tag) => (
                    <Badge tag={tag} />
                  ))}
                </div>
              )}
            </Article>
            <ul class={`max-w-[50ch]`}>
              {price && (
                <li>
                  <strong>Prix</strong> : {typeof price === "string" ? capitalize(price) : price}
                </li>
              )}
              {locations && (
                <li>
                  <strong>Lieux</strong> : {Array.isArray(locations) ? locations.map(capitalize).join(", ") : capitalize(locations)}
                </li>
              )}
              {program && (
                <li>
                  <strong>Programme</strong> : {Array.isArray(program) ? program.map(capitalize).join(", ") : capitalize(program)}
                </li>
              )}
              {audience && (
                <li>
                  <strong>Publique</strong> : {capitalize(audience)}
                </li>
              )}
            </ul>
            <footer class="horizontal items-center justify-start gap-10">
              <CTA href={`/activités#${id}`} prefetch prefetchType="viewport">
                <Button ring="sm" size="lg" variant="outline" dark className="w-fit font-bold whitespace-nowrap">
                  En savoir plus
                </Button>
              </CTA>
            </footer>
          </div>
        </article>
      );
    })
  } -->
