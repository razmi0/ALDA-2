---
import VerticalText from "@/components/Home/VerticalText.astro";
import data from "@/components/shared/product-data/product.json" assert { type: "json" };
import Section from "@/layouts/Section.astro";
import { BirdIcon } from "lucide-react";
import type { ProductType } from "@/components/shared/product-data/types";
import Article from "../shared/Article.astro";
import Badge from "../shared/Badge.astro";
import Button from "../shared/Button.astro";
import CTA from "../shared/CTA.astro";
import MinimalPrice from "../shared/MinimalPrice.astro";
import RandomImage from "../shared/RandomImage.astro";

const rawProducts = data.products as ProductType[];

const topProducts = rawProducts.sort((a, b) => parseInt(b.rating, 10) - parseInt(a.rating, 10)).slice(0, 3);

const imgSize = {
  width: 400,
  height: 500,
};
---

<Section
  extension="md"
  className=" max-w-[100vw] relative vertical center md:py-52 md:px-52 gap-28 [&>article]:w-full [&>article]:justify-center [&>article]:items-center [&>article]:gap-28">
  <VerticalText position="right" dark>Le meilleur de nos propositions</VerticalText>

  <div class="vertical gap-10 w-full">
    <BirdIcon className="h-10 w-10" />
    <h2 class="text-xl text-left">Ce que l'on vous conseille</h2>
  </div>
  {
    topProducts.map((product: ProductType, i: number) => {
      const { id, title, description, tags, price, unit } = product;
      const articleOrientation = i % 2 !== 0 ? "vertical sm:horizontal-reverse" : "vertical sm:horizontal";
      return (
        <article class={articleOrientation} data-is={`product-${i}`}>
          <div transition:name={`random-image-${id}`}>
            <RandomImage width={imgSize.width} height={imgSize.height} />
          </div>
          <div class="vertical gap-10 w-fit" data-id={id}>
            <Article
              title={title}
              words1={description.short}
              pClass={"text-black/90 dark:text-white/90 max-w-[50ch]"}
              dark>
              <div class="w-full h-full space-x-4 text-left" slot="subtitle">
                {tags.map((tag) => {
                  return <Badge tag={tag} />;
                })}
              </div>
            </Article>
            <footer class="horizontal items-center justify-start gap-10">
              <CTA href={`/tarifs#${id}`} prefetch prefetchType="viewport">
                <Button ring="sm" size="lg" variant="outline" dark className="w-fit font-bold whitespace-nowrap">
                  En savoir plus
                </Button>
              </CTA>
              <MinimalPrice price={price} unit={unit} />
            </footer>
          </div>
        </article>
      );
    })
  }
</Section>
