---
import { cn } from "@/lib/utils";
import RandomImage from "../shared/RandomImage.astro";

interface Props {
  size: number;
  orientation?: "ltr" | "rtl";
  className?: string;
}

const orientationClasses = {
  ltr: "right-5 justify-start",
  rtl: "left-5 justify-end",
};

const { size = 400, orientation = "rtl", className = "" } = Astro.props;
const filteredProps = ["size", "orientation", "className"];
const props = Object.keys(Astro.props).reduce((acc: Record<string, unknown>, key: string) => {
  if (!filteredProps.includes(key)) {
    acc[key] = Astro.props[key as keyof Props];
  }
  return acc;
}, {});
---

<div class={`full ${className} `} {...props}>
  <RandomImage
    seed={size}
    className="w-full aspect-square ring-offset-2 ring-1 ring-stone-200"
    style={`height : ${size}px`}
  />
  <div
    class={cn(
      `absolute bottom-5 horizontal w-full gap-5 items-center [&>*]:ring-1 [&>*]:ring-white [&>*]:aspect-square`,
      orientationClasses[orientation]
    )}>
    <RandomImage size={110} className="hover:brightness-105 transition-all hover:scale-105" />
    <RandomImage size={110} className="hover:brightness-105 transition-all hover:scale-105" />
    <RandomImage size={110} className="hover:brightness-105 transition-all hover:scale-105" />
  </div>
</div>
