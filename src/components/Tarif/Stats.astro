---
import Badge from "@/components/Products/Badge.astro";
import Bar from "@/components/Products/Bar.astro";
import type { StatType } from "@/components/Products/types";
import { generateLorem } from "@/lib/utils";

interface Props {
  label: string;
  type: "bar" | "badge";
  stats: this["type"] extends "bar" ? StatType[] : unknown[];
}

const { label, type, stats } = Astro.props;
---

<article class="horizontal items-center justify-start w-fit gap-5">
  <div class="horizontal center gap-1 [&>*]:h-5 [&>*]:-translate-y-[2px] [&>*]:stroke-2">
    <slot name="icon" />
    <p class="font-semibold">{label}</p>
  </div>
  <div class="space-x-5">
    {type === "bar" && (stats as StatType[]).map((stat) => <Bar barSize={175} value={stat.value} />)}
    {
      type === "badge" &&
        stats.map(() => <Badge variant="outline" className="my-2 font-medium" tag={generateLorem(1)} />)
    }
  </div>
</article>
