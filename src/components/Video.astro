---
import { Image } from "astro:assets";
import HeroStart from "@/assets/hero-start.jpg";

const styles = "absolute-align w-screen h-screen max-w-screen object-cover pointer-events-none";
---

<script>
  document.addEventListener("astro:page-load", () => {
    interface NavigatorType extends Navigator {
      connection: {
        effectiveType: string;
        rtt: number;
        downlink: number;
      };
    }

    type ConnectionType = "4" | "3" | "2" | "1" | "0";
    type SrcType = Exclude<ConnectionType, "1" | "0">;
    type SrcValue = "hero/1080p.mp4" | "hero/720p.mp4" | "hero/480p.mp4";

    const srcs = {
      4: "hero/1080p.mp4",
      3: "hero/720p.mp4",
      2: "hero/480p.mp4",
    } as Record<SrcType, SrcValue>;

    let elementsOk = true;
    const elements = {
      video: document.querySelector("video[data-connection]") as HTMLVideoElement,
      img: document.querySelector("img[data-connection]") as HTMLImageElement,
    };
    if (!elements.video || !elements.img) elementsOk = false;

    const getConnection = (): ConnectionType => {
      if (!("connection" in navigator)) return "3";
      const { effectiveType, rtt, downlink } = (navigator as NavigatorType).connection;
      return effectiveType === "4g" && rtt < 500 && downlink > 5
        ? "4"
        : effectiveType === "4g" && rtt < 1000 && downlink > 3
          ? "3"
          : effectiveType === "3g" && rtt < 2000 && downlink > 2
            ? "2"
            : effectiveType === "2g" && rtt < 4000 && downlink > 0.5
              ? "1"
              : "0";
    };

    if (elementsOk) {
      const connection = getConnection();
      elements.video.dataset.connection = connection;
      elements.img.dataset.connection = connection;

      if (parseInt(connection, 10) > 2) {
        elements.video.innerHTML = `<source src="${srcs[connection as SrcType]}" type="video/mp4" />`;
      }
    }
  });
</script>

<style>
  video[data-connection="0"],
  video[data-connection="1"] {
    display: none;
  }
</style>

<video data-connection="0" preload="auto" class={styles + " z-20"} autoplay loop muted playsinline> </video>
<Image data-connection="0" src={HeroStart} alt="hero image" class={styles + " z-10"} />
